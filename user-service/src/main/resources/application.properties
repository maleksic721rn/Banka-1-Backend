# NOTE: When running the application in a Docker container, some properties are overridden by environment variables


spring.application.name=user-service


#spring.profiles.active=h2
spring.profiles.active=postgres

spring.config.import=optional:file:.env[.properties]

server.port=8081

# Potrebno je u .env fajl koji se nalazi u folderu za user servis ubaciti Base64-enkodovan token
# Za sad se ovo mora uraditi rukom
oauth.jwt.secret=dGVzdDEyMzR0ZXN0MTIzNHRlc3QxMjM0dGVzdDEyMzR0ZXN0MTIzNA==
oauth.jwt.expiration=1800000

spring.output.ansi.enabled=always

logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
#logging.level.org.springframework.web=debug
#logging.level.org.springframework.security=trace
#
#logging.level.org.springframework.web=debug
#logging.level.org.springframework.security=trace

springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

spring.security.user.name=admin
spring.security.user.password=admin123

management.endpoints.web.exposure.include=health,info,metrics,prometheus,web

# ActiveMQ
amq.url=tcp://localhost:61616
amq.queryParameters=?jms.prefetchPolicy.all=1&jms.redeliveryPolicy.maximumRedeliveries=0
spring.activemq.broker-url=${amq.url}${amq.queryParameters}
destination.email=send-email
destination.customer=get-customer
destination.employee.legal=get-employee-legal
destination.account=create-account
destination.customer.email=get-customer-by-email


# frontend url for email verification
frontend.url=http://localhost:4200

springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.swagger-ui.url=/v3/api-docs
springdoc.api-docs.groups.enabled=true
springdoc.swagger-ui.urls[0].name=User-Service
springdoc.swagger-ui.urls[0].url=/v3/api-docs
springdoc.info.title=User Service API
springdoc.info.description=API za upravljanje korisnicima
springdoc.info.version=1.0

spring.sql.init.mode=always